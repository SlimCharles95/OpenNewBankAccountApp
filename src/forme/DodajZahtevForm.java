/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.KorisnikKartice;
import domen.OvlascenoLice;
import domen.PoslovnaJedinica;
import domen.PravnoLice;
import domen.ZahtevZaOtvaranjeRacuna;
import domen.Zahtev_detalji;
import domen.Zaposleni;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import logika.Kontroler;
import modeli.ModelTabeleDodajKorisnika;
import modeli.ModelTabeleVlasnici;

/**
 *
 * @author Ivan
 */
public class DodajZahtevForm extends javax.swing.JFrame {
private boolean izmena;
    private PravnoLice pravnoLice;
    private ZahtevZaOtvaranjeRacuna preIzmeneZah;
    private Zahtev_detalji preIzmene;
    ArrayList<KorisnikKartice> izbrisaneKartice=new ArrayList<>();
    /**
     * Creates new form DodajZahtevForm
     */
    public DodajZahtevForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonSaveZahtev = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonOtkazi = new javax.swing.JButton();
        jButtonDodajKart = new javax.swing.JButton();
        jButtonObrisiKart = new javax.swing.JButton();
        jLabelŠifra = new javax.swing.JLabel();
        jLabel2Zap = new javax.swing.JLabel();
        jLabel3Poslonajedinica = new javax.swing.JLabel();
        jTextSifra = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4Status = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8UKupanLimit = new javax.swing.JLabel();
        jTextField1Pravnolice = new javax.swing.JTextField();
        jTextField2VrstaRacua = new javax.swing.JTextField();
        jTextField3Namena = new javax.swing.JTextField();
        jTextField4Status = new javax.swing.JTextField();
        jTextField1ObimTrans = new javax.swing.JTextField();
        jTextField2UkupanLimit = new javax.swing.JTextField();
        jCheckBox1Inostra = new javax.swing.JCheckBox();
        jCheckBox1Izvod = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dodavanje zahteva");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Korisnici kartice"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonSaveZahtev.setText("Sačuvaj zahtev");
        jButtonSaveZahtev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveZahtevActionPerformed(evt);
            }
        });

        jButton1.setText("Otvori racun");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonOtkazi.setText("Otkaži");
        jButtonOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOtkaziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jButtonSaveZahtev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOtkazi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveZahtev)
                    .addComponent(jButton1)
                    .addComponent(jButtonOtkazi))
                .addContainerGap())
        );

        jButtonDodajKart.setText("Dodaj");
        jButtonDodajKart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajKartActionPerformed(evt);
            }
        });

        jButtonObrisiKart.setText("Obriši");
        jButtonObrisiKart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiKartActionPerformed(evt);
            }
        });

        jLabelŠifra.setText("Šifra zahteva");

        jLabel2Zap.setText("Obradio zaposleni");

        jLabel3Poslonajedinica.setText("Poslovna jedinica");

        jTextSifra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSifraActionPerformed(evt);
            }
        });

        jLabel1.setText("Pravno lice");

        jLabel2.setText("Vrsta računa");

        jLabel3.setText("Namena računa");

        jLabel4Status.setText("Status");

        jLabel5.setText("Inostrane transkacije");

        jLabel6.setText("Dostava izvoda");

        jLabel7.setText("Obim transakcija (god.)");

        jLabel8UKupanLimit.setText("Ukupan limit (RSD)");

        jTextField2VrstaRacua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2VrstaRacuaActionPerformed(evt);
            }
        });

        jTextField1ObimTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ObimTransActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(jTextField2VrstaRacua, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1Pravnolice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4Status)
                                        .addGap(62, 62, 62)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3Namena)
                                    .addComponent(jTextField4Status))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8UKupanLimit)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1Izvod)
                            .addComponent(jCheckBox1Inostra)
                            .addComponent(jTextField1ObimTrans, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jTextField2UkupanLimit))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelŠifra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextSifra, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2Zap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3Poslonajedinica, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, 0, 127, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonDodajKart, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonObrisiKart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jButtonDodajKart)
                .addGap(18, 18, 18)
                .addComponent(jButtonObrisiKart)
                .addContainerGap(306, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelŠifra)
                    .addComponent(jLabel2Zap)
                    .addComponent(jLabel3Poslonajedinica)
                    .addComponent(jTextSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1Inostra)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5)
                        .addComponent(jTextField1Pravnolice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jTextField2VrstaRacua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1Izvod))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jTextField3Namena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1ObimTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4Status)
                        .addComponent(jLabel8UKupanLimit)
                        .addComponent(jTextField2UkupanLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField4Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOtkaziActionPerformed
ZahteviForm zf=new ZahteviForm();
zf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOtkaziActionPerformed

    private void jTextSifraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSifraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSifraActionPerformed

    private void jTextField2VrstaRacuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2VrstaRacuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2VrstaRacuaActionPerformed

    private void jTextField1ObimTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ObimTransActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ObimTransActionPerformed

    private void jButtonObrisiKartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiKartActionPerformed
int red=jTable1.getSelectedRow();
        if(red!=-1){
      
            ModelTabeleDodajKorisnika mtv=(ModelTabeleDodajKorisnika) jTable1.getModel();
            KorisnikKartice kk=mtv.getLista().get(red);
            izbrisaneKartice.add(kk);
            mtv.obrisi(red);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Niste izabrali korisnika!");
            return;
        }
    }//GEN-LAST:event_jButtonObrisiKartActionPerformed

    private void jButtonDodajKartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajKartActionPerformed
KorisnikKarticeForm kk=new KorisnikKarticeForm(this, true);
kk.pack();
kk.setVisible(true);
    }//GEN-LAST:event_jButtonDodajKartActionPerformed

    private void jButtonSaveZahtevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveZahtevActionPerformed
ModelTabeleDodajKorisnika mtd=(ModelTabeleDodajKorisnika) jTable1.getModel();
        if(isIzmena()){
            if(jTextField2UkupanLimit.getText().isEmpty()||jTextField2VrstaRacua.getText().isEmpty()||jTextField4Status.getText().isEmpty()){
              JOptionPane.showMessageDialog(this, "Niste uneli sve podatke!");
        return;
    }
     String limit=jTextField2UkupanLimit.getText();
    String vrsta=jTextField2VrstaRacua.getText();
            PoslovnaJedinica pj=(PoslovnaJedinica) jComboBox2.getSelectedItem();
        String status=jTextField4Status.getText();
        Zaposleni zap=(Zaposleni) jComboBox1.getSelectedItem();
            
         int ukupanLimit=0;
    try{
        ukupanLimit=Integer.parseInt(limit);
    } catch ( NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Niste uneli ukupan limit ispravno!");
        return;
    }
    if(ukupanLimit<0){
    JOptionPane.showMessageDialog(this, "Niste uneli pozitivan broj!");
        return;
    }
    boolean sveSacuvano=true;
    boolean nestoIzmenjeno=false;
    ArrayList<KorisnikKartice> lista=new ArrayList<>();
    lista=mtd.getLista();
    if(!(status.equals(getPreIzmeneZah().getStatus()))){
        nestoIzmenjeno=true;
    boolean promenaStatusa=Kontroler.getInstanca().izmeniStatus(status,getPreIzmeneZah());
     if(!promenaStatusa){
    JOptionPane.showMessageDialog(this, "Status nije promenjen!");
       sveSacuvano=false;
    }
    }
    if(!(vrsta.equals(getPreIzmeneZah().getVrsta_racuna()))){
                nestoIzmenjeno=true;
    boolean promenaVrste=Kontroler.getInstanca().izmeniVrstu(vrsta,getPreIzmeneZah());
     if(!promenaVrste){
    JOptionPane.showMessageDialog(this, "Vrsta racuna nije promenjena!");
              sveSacuvano=false;

    }
    }
    if(!(zap.equals(getPreIzmeneZah().getZaposleni()))){
                nestoIzmenjeno=true;
    boolean promenaZap=Kontroler.getInstanca().izmeniZaposlenog(zap,getPreIzmeneZah());
     if(!promenaZap){
    JOptionPane.showMessageDialog(this, "Zaposleni nije promenjen!");
              sveSacuvano=false;
    }
    }
    if(!(pj.getNaziv().equals(getPreIzmeneZah().getPj().getNaziv()))){
                nestoIzmenjeno=true;
    boolean promenaPJ=Kontroler.getInstanca().izmeniPj(pj,getPreIzmeneZah());
     if(!promenaPJ){
    JOptionPane.showMessageDialog(this, "Poslovna jedninica se ne moze direktno izmeniti!");
              sveSacuvano=false;
    }
    }
     if(!(ukupanLimit==getPreIzmene().getUkupan_limit())){
                nestoIzmenjeno=true;
    boolean promenaLimit=Kontroler.getInstanca().izmeniUkupanLimit(ukupanLimit,getPreIzmeneZah());
     if(!promenaLimit){
                  jTextField2UkupanLimit.setText(getPreIzmene().getUkupan_limit()+"");

    JOptionPane.showMessageDialog(this, "Ukupan limit se ne moze direktno izmeniti!");
              sveSacuvano=false;
    }
    }
     boolean izmenjeLimit=false;
            System.out.println("lista :"+lista.size());
            for (KorisnikKartice korisnikKartice : lista) {
                                     System.out.println("Prvi kk "+korisnikKartice.getIme_prezime());

                for (KorisnikKartice pre : getPreIzmene().getKorisniciKartica()) {
                 if(korisnikKartice.getJMBG().equals(pre.getJMBG())){
                     System.out.println("Prvi jm"+korisnikKartice.getJMBG());
                                          System.out.println("Drugi jm"+pre.getJMBG());
                               System.out.println("Prvi limit "+korisnikKartice.getLimit());
                               System.out.println("Drugi limit "+pre.getLimit());

                 if(korisnikKartice.getLimit()!=pre.getLimit()) izmenjeLimit=true;
                 
                 }   
                }
  
            }
            boolean izmenjenaVrsta=false;
            for (KorisnikKartice korisnikKartice : lista) {
                for (KorisnikKartice pre : getPreIzmene().getKorisniciKartica()) {
                 if(korisnikKartice.getJMBG().equals(pre.getJMBG())){
                 if(!(korisnikKartice.getVrsta_racuna().equals(pre.getVrsta_racuna()))) izmenjenaVrsta=true;
                 }   
                }
  
            }
            if(lista.size()!= getPreIzmene().getKorisniciKartica().size()){
                izmenjeLimit=true;
                
                }
            System.out.println("izmenjen flimit"+izmenjeLimit);
            if(izmenjeLimit){
                nestoIzmenjeno=true;
    boolean promenaLimit=Kontroler.getInstanca().izmeniLimit(lista,getPreIzmene(),izbrisaneKartice);
     if(!promenaLimit){
    JOptionPane.showMessageDialog(this, "Limit se ne moze izmeniti!");
              sveSacuvano=false;
    }
            }
     
     boolean promenaVrstaUKarti=Kontroler.getInstanca().izmeniVrstaUKart(lista,getPreIzmene(),izbrisaneKartice);
     if(!promenaVrstaUKarti){
    JOptionPane.showMessageDialog(this, "Vrsta racuna   se ne moze direktno izmeniti u tabeli!");
              sveSacuvano=false;
    }
   
      if(sveSacuvano){
              JOptionPane.showMessageDialog(this, "Sacuvane su promene!");
ZahteviForm zf=new ZahteviForm();
this.setVisible(false);
zf.setVisible(true);
      }  
      
       
    
            
}else{
if(jTextField1ObimTrans.getText().isEmpty()||jTextField2VrstaRacua.getText().isEmpty()||jTextField3Namena.getText().isEmpty()||jTextField4Status.getText().isEmpty()){
              JOptionPane.showMessageDialog(this, "Niste uneli sve podatke!");

        return;
    }
    String obim=jTextField1ObimTrans.getText();
    String vrsta=jTextField2VrstaRacua.getText();
    String namena=jTextField3Namena.getText();
        String status=jTextField4Status.getText();
        String inostra="";
        if(jCheckBox1Inostra.isSelected()){
  inostra="da";
}else{
  inostra="ne";
}
        String izvod="";
        if(jCheckBox1Izvod.isSelected()){
  izvod="da";
}else{
  izvod="ne";
}
    
    int transakcije=0;
    try{
        transakcije=Integer.parseInt(obim);
    } catch ( NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Niste uneli obim ispravno ispravno!");
        return;
    }
    if(transakcije<0){
    JOptionPane.showMessageDialog(this, "Niste uneli pozitivan broj!");
        return;
    }
    ArrayList<KorisnikKartice> lista=null;
    lista=mtd.getLista();
    ZahtevZaOtvaranjeRacuna zah=new ZahtevZaOtvaranjeRacuna(-1, vrsta, status, Kontroler.getInstanca().getUlogovani(), getPravnoLice(), null);
    Zahtev_detalji detalji=new Zahtev_detalji(-1, namena, transakcije, inostra, izvod, 0, lista);
    boolean uspesno=Kontroler.getInstanca().sacuvajZahtev(zah, detalji);
    if(uspesno){
    JOptionPane.showMessageDialog(rootPane, "Uspesno sacuvan zahtev");
    ZahteviForm zf=new ZahteviForm();
    this.setVisible(false);
    zf.setVisible(true);
    
   
    }else{
            JOptionPane.showMessageDialog(rootPane, "Greska! Nije sacuvan zahtev!");
return;
    }
    
}
    }//GEN-LAST:event_jButtonSaveZahtevActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(jTextField4Status.getText().isEmpty() || (!(jTextField4Status.getText().equals("odobren"))) ){
JOptionPane.showMessageDialog(rootPane, "Ne moze se ovoriti racun dok se ne odobri zahtev");
return;
}else
{
    int broj=-1;
    broj=Kontroler.getInstanca().otvoriRacun(preIzmene);
    if(broj!=-1){
  JOptionPane.showMessageDialog(rootPane, "Otvoren racun u banci sa brojem 256-"+broj+"-38");
    }else{
         JOptionPane.showMessageDialog(rootPane, "Nije otvoren racun u banci ");
 
    }
}
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DodajZahtevForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DodajZahtevForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DodajZahtevForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DodajZahtevForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DodajZahtevForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDodajKart;
    private javax.swing.JButton jButtonObrisiKart;
    private javax.swing.JButton jButtonOtkazi;
    private javax.swing.JButton jButtonSaveZahtev;
    private javax.swing.JCheckBox jCheckBox1Inostra;
    private javax.swing.JCheckBox jCheckBox1Izvod;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2Zap;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel3Poslonajedinica;
    private javax.swing.JLabel jLabel4Status;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8UKupanLimit;
    private javax.swing.JLabel jLabelŠifra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1ObimTrans;
    private javax.swing.JTextField jTextField1Pravnolice;
    private javax.swing.JTextField jTextField2UkupanLimit;
    private javax.swing.JTextField jTextField2VrstaRacua;
    private javax.swing.JTextField jTextField3Namena;
    private javax.swing.JTextField jTextField4Status;
    private javax.swing.JTextField jTextSifra;
    // End of variables declaration//GEN-END:variables


    void srediFormu(ZahtevZaOtvaranjeRacuna zah, boolean prikazi) {
if(zah==null){
   
srediKombo(zah);
    srediTabelu(zah);
   
    jTextSifra.setVisible(false);
    jComboBox2.setVisible(false);
    jComboBox1.setVisible(false);
    jTextField2UkupanLimit.setVisible(false);
    jTextField1Pravnolice.setText(this.getPravnoLice().getNaziv());
    jTextField1Pravnolice.setEditable(false);
    jLabel2Zap.setVisible(false);
        jLabel3Poslonajedinica.setVisible(false);
    jLabel8UKupanLimit.setVisible(false);
            jLabelŠifra.setVisible(false);


}else{
    this.setPreIzmeneZah(zah);
Zahtev_detalji detalji=null;
detalji=Kontroler.getInstanca().vratiDetalje(zah);
    this.setPreIzmene(detalji);
srediKombo(zah);
    srediTabelu(zah);
    
if(prikazi){
  jComboBox1.setEditable(false);
 jComboBox2.setEditable(false);
 jTextField1ObimTrans.setText(detalji.getObim_transkacija()+"");
  jTextField1Pravnolice.setText(zah.getPravno().getNaziv());
 jTextField2UkupanLimit.setText(detalji.getUkupan_limit()+"");
 jTextField2VrstaRacua.setText(zah.getVrsta_racuna());
 jTextField3Namena.setText(detalji.getNamena_racuna());
 jTextField4Status.setText(zah.getStatus());
 jTextSifra.setText(zah.getSifra_zahteva()+"");
if(detalji.getInostrane_transakcije().equals("da")){
 jCheckBox1Inostra.setSelected(true);
}else{
jCheckBox1Inostra.setSelected(false);
}
if(detalji.getDostava_izvoda().equals("da")){

jCheckBox1Izvod.setSelected(true);
}else{
jCheckBox1Izvod.setSelected(false);
}

 jTextField1ObimTrans.setEditable(false);
  jTextField1Pravnolice.setEditable(false);
 jTextField2UkupanLimit.setEditable(false);
 jTextField2VrstaRacua.setEditable(false);
 jTextField3Namena.setEditable(false);
 jTextField4Status.setEditable(false);
 jTextSifra.setEditable(false);
 jCheckBox1Inostra.setEnabled(false);
jCheckBox1Izvod.setEnabled(false);
jComboBox1.setEnabled(false);
jComboBox2.setEnabled(false);
jButton1.setVisible(false);
jButtonDodajKart.setVisible(false);
jButtonObrisiKart.setVisible(false);
jButtonSaveZahtev.setVisible(false);






 
}else{
    jTextField1ObimTrans.setText(detalji.getObim_transkacija()+"");
  jTextField1Pravnolice.setText(zah.getPravno().getNaziv());
 jTextField2UkupanLimit.setText(detalji.getUkupan_limit()+"");
 jTextField2VrstaRacua.setText(zah.getVrsta_racuna());
 jTextField3Namena.setText(detalji.getNamena_racuna());
 jTextField4Status.setText(zah.getStatus());
 jTextSifra.setText(zah.getSifra_zahteva()+"");
 if(detalji.getInostrane_transakcije().equals("da")){
 jCheckBox1Inostra.setSelected(true);
}else{
jCheckBox1Inostra.setSelected(false);
}
if(detalji.getDostava_izvoda().equals("da")){

jCheckBox1Izvod.setSelected(true);
}else{
jCheckBox1Izvod.setSelected(false);
}

 jTextField1ObimTrans.setEditable(false);
  jTextField1Pravnolice.setEditable(false);
 jTextField2UkupanLimit.setEditable(true);
 jTextField2VrstaRacua.setEditable(true);
 jTextField3Namena.setEditable(false);
 jTextField4Status.setEditable(true);
 jTextSifra.setEditable(false);
 jCheckBox1Inostra.setEnabled(false);
jCheckBox1Izvod.setEnabled(false);
}
}
    }

    public boolean isIzmena() {
        return izmena;
    }

    public void setIzmena(boolean izmena) {
        this.izmena = izmena;
    }

    public PravnoLice getPravnoLice() {
        return pravnoLice;
    }

    public void setPravnoLice(PravnoLice pravnoLice) {
        this.pravnoLice = pravnoLice;
    }
    
    public void dodajKorisnika(KorisnikKartice kk){
    ModelTabeleDodajKorisnika mtdk=(ModelTabeleDodajKorisnika) jTable1.getModel();

    mtdk.dodaj(kk);
    }

    private void srediTabelu(ZahtevZaOtvaranjeRacuna zah) {
ArrayList<KorisnikKartice> lista=new ArrayList<>();
if(zah==null){
ModelTabeleDodajKorisnika mtv=new ModelTabeleDodajKorisnika();
jTable1.setModel(mtv);
} else
{
    lista=Kontroler.getInstanca().vratiKorisnike(zah);
   
ModelTabeleDodajKorisnika mtv=new ModelTabeleDodajKorisnika(lista);
jTable1.setModel(mtv);
}
    }

    private void srediKombo(ZahtevZaOtvaranjeRacuna zah) {
ArrayList<Zaposleni> zaposleni = null;
       zaposleni= Kontroler.getInstanca().dajMiZaposlene();
ArrayList<PoslovnaJedinica> jedinice = null;
       jedinice= Kontroler.getInstanca().dajMiJedinice();
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        if(zah!=null){
        jComboBox1.addItem(zah.getZaposleni());
         jComboBox2.addItem(zah.getZaposleni().getPj());
        }
                if(zah!=null){

        for (Zaposleni z : zaposleni) {
            if(zah.getZaposleni().getSifra_zaposlenog()!=z.getSifra_zaposlenog())
            jComboBox1.addItem(z);
        }
        for (PoslovnaJedinica pj : jedinice) {
            if(zah.getZaposleni().getPj().getSifra_pj()!=pj.getSifra_pj())
            jComboBox2.addItem(pj);
        }
                 }else
                {
                 for (Zaposleni z : zaposleni) {
            jComboBox1.addItem(z);
        }
              for (PoslovnaJedinica pj : jedinice) {
            jComboBox2.addItem(pj);
        }
                
                }
    }

    public ZahtevZaOtvaranjeRacuna getPreIzmeneZah() {
        return preIzmeneZah;
    }

    public void setPreIzmeneZah(ZahtevZaOtvaranjeRacuna preIzmeneZah) {
        this.preIzmeneZah = preIzmeneZah;
    }

    public Zahtev_detalji getPreIzmene() {
        return preIzmene;
    }

    public void setPreIzmene(Zahtev_detalji preIzmene) {
        this.preIzmene = preIzmene;
    }
}
